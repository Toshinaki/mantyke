name: Release

on:
  push:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    name: Release packages
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Nx cache
        uses: nrwl/nx-set-shas@v4

      - name: Build all packages
        run: pnpm nx run-many -t build --parallel=3

      - name: Check for changes
        id: changes
        run: |
          if pnpm changeset status --since=HEAD~1 2>/dev/null | grep -q "No changesets present"; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "No changesets found, skipping release"
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "Changesets found, proceeding with release"
          fi

      - name: Create Release Pull Request or Publish
        if: steps.changes.outputs.has-changes == 'true'
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm release
          commit: 'chore: release packages'
          title: 'chore: release packages'
          setupGitUser: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Releases
        if: steps.changesets.outputs.published == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const releases = JSON.parse('${{ steps.changesets.outputs.publishedPackages }}');

            for (const release of releases) {
              const { name, version } = release;
              const tagName = `${name}@${version}`;
              
              try {
                await github.rest.repos.createRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  tag_name: tagName,
                  name: `${name} v${version}`,
                  body: `Release of ${name} version ${version}`,
                  draft: false,
                  prerelease: version.includes('-'),
                });
                
                console.log(`Created release for ${tagName}`);
              } catch (error) {
                console.error(`Failed to create release for ${tagName}:`, error.message);
              }
            }

      - name: Release summary
        if: always()
        run: |
          if [ "${{ steps.changes.outputs.has-changes }}" = "true" ]; then
            if [ "${{ steps.changesets.outputs.published }}" = "true" ]; then
              echo "‚úÖ Packages published successfully"
              echo "Published packages: ${{ steps.changesets.outputs.publishedPackages }}"
            else
              echo "üìù Release PR created or updated"
              echo "PR URL: ${{ steps.changesets.outputs.pullRequestNumber }}"
            fi
          else
            echo "‚ÑπÔ∏è No changes to release"
          fi
